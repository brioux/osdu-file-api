// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type RecordVersionMeta struct {
}

// RecordVersion - Metadata record
type RecordVersion struct {
	// Unique identifier generated by the system for the file metadata record.
	ID *string
	// Kind of data being ingested. Must follow the naming
	//   convention:data-Partition-Id}:dataset-name}:record-type}:version}.
	Kind  string
	Legal Legal
	// The file data container containing all necessary details of the file record
	Data FileData
	// A named list of entities in the data lake as a dictionary item.
	Ancestry *Ancestry
	// The version number of this OSDU resource; set by the framework.
	Version *int64
	Meta    []map[string]RecordVersionMeta
	Tags    map[string]string
	ACL     ACL
}

func (o *RecordVersion) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *RecordVersion) GetKind() string {
	if o == nil {
		return ""
	}
	return o.Kind
}

func (o *RecordVersion) GetLegal() Legal {
	if o == nil {
		return Legal{}
	}
	return o.Legal
}

func (o *RecordVersion) GetData() FileData {
	if o == nil {
		return FileData{}
	}
	return o.Data
}

func (o *RecordVersion) GetAncestry() *Ancestry {
	if o == nil {
		return nil
	}
	return o.Ancestry
}

func (o *RecordVersion) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

func (o *RecordVersion) GetMeta() []map[string]RecordVersionMeta {
	if o == nil {
		return nil
	}
	return o.Meta
}

func (o *RecordVersion) GetTags() map[string]string {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *RecordVersion) GetACL() ACL {
	if o == nil {
		return ACL{}
	}
	return o.ACL
}
